New Features and Important Changes in GammaLib 00-08-00

Author(s) : Juergen Knoedlseder

March, 18th, 2013


1. Introduction
---------------
This document briefly summarizes module by module the most important
changes made since the last release of GammaLib.


2. Public interface modifications
---------------------------------
This section summarizes all modifications of public class interfaces
that will lead to compatibility issues with respect to the last
GammaLib release.

GEbounds
  The number argument in the setlin and setlon methods has been moved
  from the last position to the first position in the argument list.
  The emin, emax, emean and elogmean methods now take a const integer
  reference as argument instead of an integer value.

GModelPar
  The "real_" prefix has been stripped from the methods operating on
  true attributes, and the methods operating on unscaled attributes
  have been prefixed with "factor_". Some missing methods have been
  added. The name() and unit() methods now returns a const reference.

GModels
  The set() method has been added for model setting.

GObservations
  The observation is now passed as const reference in the append()
  method (was non-const before). The observation iterator has been
  removed from the class. The reference returned by the models() method
  is now declared const. The operator[] now return a pointer instead
  of a reference and the set() method has been added for observation
  setting.

GOptimizerFunction
  The value method now returns a value instead of a pointer.

GOptimizer & GOptimizerLM
  The optimization operators have been removed and replaced by the
  optimize method.


3. Configuration
-----------------
None


4. Application module
---------------------
None


5. Base module
--------------
The GContainer interface class has been added to provide a common base
class for all container classes. The following classes are now derived
from GContainer:
- GEbounds
- GGti
- GOptimizerPars (and hence GModels)
- GPhotons
- GTimes
- GXml
- GXmlNode

Appropriate methods have been implemented in these classes to handle
containers. They are not detailed here.


6. FITS I/O Interface
---------------------
None


7. Linear algebra module
------------------------
None


8. Model module
---------------
The sky models have been reorganized.

GSkyModel is now the general class for a sky model. It is no longer
abstract. The classes GModelPointSource, GModelExtendedSource and
GModelDiffuseSource have been removed, as the source type is fully
determined from the spatial model component.

All spatial model components have now been categorized into 3 classes:

* GModelSpatialPointSource - point source
* GModelSpatialRadial - extended radial models
* GModelSpatialElliptical - extended elliptical models
* GModelSpatialDiffuse - diffuse models

While GModelSpatialPointSource is a normal class, the other 2 classes
are abstract and serve as the base classes for the various model
implementations. The following implementations exist:

GModelSpatialRadial
 |
 +- GModelSpatialRadialDisk - axisymmetric disk
 +- GModelSpatialRadialGauss - axisymmetric Gaussian
 +- GModelSpatialRadialShell - axisymmetric shell

GModelSpatialElliptical

GModelSpatialDiffuse
 |
 +- GModelSpatialDiffuseConst - isotropic map
 +- GModelSpatialDiffuseCube - map cube
 +- GModelSpatialDiffuseMap - spatial map


9. Numerics module
------------------
None


10. Observation module
----------------------
Add energy constructor to GEnergy that allows one-line construction of
an object by specifying an energy value and unit. Possible unit strings
are erg(s), keV, MeV, GeV, and TeV (case insensitive).


11. Optimization module
-----------------------
None


12. Sky module
--------------
None


13. Support module
------------------
The abstract GUrl base class has been implemented that provides an
interface for transparent handling of Unified Resource Locators.
Using this interface, files can be equally handles as strings, or
http addresses.

The following URL types have been implemented so far:
* GUrlFile: handles flat files.


14. XML module
--------------
The XML module classes now make use of the GUrl abstract interface
to allow for generic URL input / output of the XML document. Before,
only flat file I/O has been supported. Now, I/O can go through any
media for which a URL class has been implemented.


15. VO module
-------------
This new module has been added to support compliance with the Virtual
Observatory (VO) protocols.

The GVOClient class implements a VO compliant client that can communicate
with a SAMP Hub. The method supports SAMP discovery and registering and
unregistering.


16. Test module
---------------
None


17. Multi-wavelength interface
------------------------------
None


18. Fermi-LAT interface
----------------------
None


19. CTA interface
-----------------
None


20. COMPTEL interface
---------------------
None

