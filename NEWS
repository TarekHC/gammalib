New Features and Important Changes in GammaLib 00-06-00

Author(s) : Juergen Knoedlseder

September, 14th, 2012


1. Introduction
---------------
This document briefly summarizes module by module the most important
changes made since the last release of GammaLib.

The code quality was enhanced in this release by resolving errors and
warnings issued by the cppcheck code quality check utility. A few real
errors were detected, the remaining modifications concerned mainly the
coding style and the translation of C-style casts into C++ style casts.


2. Configuration
-----------------
Added OpenMP support to allow for code parallelization. If available,
OpenMP is enabled by default. OpenMP support may be disabled using
the --disable-openmp flag.

Check for the presence of the Python.h header file and the wrapper
files for Python bindings.


3. Application module
---------------------
The GLog class was improved. The printed dates reflect now the time
when a new line was started in a log file. The copy operator has also
been implemented.


4. FITS I/O Interface
---------------------
None


5. Linear algebra module
------------------------
The matrix classes have been refactored using the actual coding
conventions.

Two bugs were corrected in GSparseMatrix. First, the non-equal
operator != had a bug that left the major part of the matrix untested.
This had hidden a problem with the fill stack from the unit test.
Once the != operator bug was corrected, the unit test revealed that
the misusage of an internal working array corrupted the fill stack
after a flush. This has been corrected by adding an additional
working array, so that conflicts can no longer arise.


6. Model module
---------------
Added GModelSpatialMap model that allow using skymap for the spatial
component of the model. The Monte Carlo method as well as the function
evaluation methods have been implemented. The function evaluation
methods make use of the GSkymap sky direction access operators that
performs a bi-linear interpolation of the pixels values for a given
direction. Note that the total flux in the sky map is normalized
internally to 1 ph/cm2/s. Negative pixels will automatically be set to
zero.


7. Numerics module
------------------
None


8. Observation module
---------------------
The optimization of model parameters makes now use of OpenMP (if 
available) for parallelization of the likelihood computation. This
allows the increase of the code execution speed in the presence of
multiple processor cores.


9. Optimization module
----------------------
None


10. Sky module
--------------
Added sky direction access operator to GSkymap class. This operator
returns the intensity in the sky map as function of the sky direction,
performing a bi-linear interpolation between the pixel values of the
map.

For consistency with other classes, GSkyDir arguments are now passed
by reference in the GSkymap access operators. Also map indices have
been declared by reference.


11. Support module
------------------
None


12. XML module
--------------
None


13. Test module
---------------
A new module has been introduced that supports unit testing of
GammaLib. The module contains so far three classes:
- GTestSuites is a container class for unit test suites
- GTestSuite implements a specific unit test suite
- GTestCase collects information about a specific test case
GTestSuites outputs the result in a JUnit compliant XML file for test
report analysis. The usual console output is also supported. The
GammaLib unit tests have been rewritten to make use of the new
test suite.


14. Multi-wavelength interface
------------------------------
None


15. Fermi-LAT interface
----------------------
Added support for Pass 7 data. In particular, P7SOURCE_V6 response
functions are now included in the GammaLib distribution, together
with some test data for the Crab. The LAT response code has also
been refactored to support more cleanly various PSF versions.
Efficiency factors, needed by Pass 7, are now also supported. Note
that we still lack support for the Phi dependence of the IRF, and
also energy dispersion has not yet been implemented.


16. CTA interface
-----------------
Added support for diffuse sources to CTA response. FITS sky maps can
now be used to simulated and to fit CTA event data, both in binned and
unbinned mode. Specifically, the GCTAResponse::irf_diffuse and
GCTAResponse::npred_diffuse methods have been implemented to do the
job. Some optimization has been performed to adjust the precision
of the integrations that need to be performed for the diffuse response
computation.

