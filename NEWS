New Features and Important Changes in GammaLib 00-04-11

Author(s) : Juergen Knoedlseder

August 2, 2011


1. Introduction
---------------
This document briefly summarizes module by module the most important
changes made since the last release of GammaLib.


2. Configuration
-----------------
None

3. Application module
---------------------
GPar::filename() expands any environment variables that are present in
the filename.

Add GPars::append() and GPars::append_standard() to allow construction
of parfiles from within the code. This is particularly useful for
development cscripts that want to carry a default parfile on the fly.

Add output methods to Python interface of GLog class. These wrap the
operator<< methods existing in the C++ interface for the class and
provide logging support within Python.

Parameter file read and write operations are now protected by a file
lock. This prevents file access conflicts for multiple processes
trying to read and write simultaneously to the same file.


4. FITS I/O Interface
---------------------
Any environment variables in the filename in GFits::open and
GFits::saveto are expanded.


5. Linear algebra module
------------------------
None


6. Model module
---------------
Add eflux() method for spectral models. This allows the computation
of an energy flux (erg/cm2/s) for a given energy interval.

Implement the flux(), eflux and mc() methods for the GModelSpectralFunc
class.


7. Numerics module
------------------
None


8. Observation module
---------------------
Add set response() method to GObservation. This allows setting a
response by cloning the response specified in the argument.

Correct a major bug in GObservation_optimizer::eval() where Npred
was incorrectly added to the log-likelihood value for multiple
observations.


9. Optimization module
----------------------
The following pure virtual methods have been added to GOptimizer:
value() - returns the optimizer value
status() - returns the optimizer status (integer code)
iter() - returns the number of iterations done by the optimizer

The function cast_GOptimizerLM has been added to the python interface
so that casting from GOptimizer to GOptimizerLM is possible.


10. Sky module
--------------
None


11. Support module
------------------
Add expand_env() function to expand environment variables within
a string.

Any environment variables in the filename in GCsv::load are expanded.


12. XML module
--------------
Any environment variables in the filename in GXml::load are expanded.


13. Multi-wavelength interface
------------------------------
Add set response() method to GMWLObservation. This allows setting a
response by cloning the response specified in the argument.


14. Fermi-LAT interface
----------------------
Add set response() method to GLATLObservation. This allows setting a
response by cloning the response specified in the argument.

In setting the caldb directory path for GLATResponse, any environment
variables in the path are expanded.


15. CTA interface
-----------------
Add set response() method to GCTAObservation. This allows setting a
response by cloning the response specified in the argument.

In setting the caldb directory path for GCTAResponse, any environment
variables in the path are expanded.

GCTAResponse::aeff() does no longer return negative effective area
that occurred when extrapolating below the low-energy threshold.
